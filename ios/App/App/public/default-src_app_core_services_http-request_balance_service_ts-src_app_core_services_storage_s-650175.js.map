{"version":3,"file":"default-src_app_core_services_http-request_balance_service_ts-src_app_core_services_storage_s-650175.js","mappings":"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","sources":["./src/app/core/services/http-request/balance.service.ts","./src/app/core/services/storage.service.ts","./src/utils/custom-validators.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BalanceService {\r\n  private autentication: string;\r\n  private _ready: Promise<void>;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n  \r\n  // La funcion fetch se encarga de hacer la solicitud de datos al api, esta recibe algunos otros datos\r\n  // que son el target y el data que en principio se envia como valor nulo si no se recibe.\r\n\r\n\r\n  private async fetch(target, data = null): Promise<any>{\r\n    return this.httpClient.post<any>(environment.api + '/balance', JSON.stringify({\r\n      target: target,\r\n      input: data\r\n    })).toPromise();\r\n  }\r\n\r\n  getBalance({phone_number}): Promise<any>{\r\n    return this.fetch(\"get_balance\", {\r\n      \"phone_number\": phone_number \r\n    });\r\n  }\r\n  \r\n  getBalanceMifi({phone_number}): Promise<any>{\r\n    return this.fetch(\"get_balance_mifi\", {\r\n      \"phone_number\": phone_number \r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage-angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageService {\r\n  private _storage: Storage | null = null;\r\n  private _ready: Promise<void>;\r\n\r\n  constructor(\r\n    private storage: Storage\r\n  ) {\r\n    this._ready = new Promise(async resolve => {\r\n      const storage = await this.storage.create();\r\n      this._storage = storage;\r\n      resolve();\r\n    }) \r\n  }\r\n\r\n  async setPNumber(pn: string){\r\n    await this._ready;\r\n    await this._storage.set('phone_number', pn);\r\n  }\r\n\r\n  async delPNumber(): Promise<any>{\r\n    await this._ready;\r\n    await this._storage.remove('phone_number');\r\n  }\r\n\r\n  async getPNumber(): Promise<any>{\r\n    await this._ready;\r\n    const pn = await this._storage.get('phone_number');\r\n    return pn;\r\n  }\r\n  async setMNumber(pn: string){\r\n    await this._ready;\r\n    await this._storage.set('mifi_number', pn);\r\n  }\r\n\r\n  async delMNumber(): Promise<any>{\r\n    await this._ready;\r\n    await this._storage.remove('mifi_number');\r\n  }\r\n\r\n  async getMNumber(): Promise<any>{\r\n    await this._ready;\r\n    const pn = await this._storage.get('mifi_number');\r\n    return pn;\r\n  }\r\n}\r\n","import { AbstractControl} from '@angular/forms';\r\n\r\nexport class Validators{\r\n    \r\n    static user(control: AbstractControl){\r\n        if(control.value != null){\r\n            const value: string = control.value;\r\n            if(value.match(/^[0-9a-zñ.]{5,64}$/)){\r\n                return null;\r\n            }\r\n        } \r\n        return {Correo: false}\r\n    }\r\n\r\n    static pass(control: AbstractControl){\r\n        if(control.value != null){\r\n            const value: string = control.value;\r\n            if(value.match(/^.{5,64}$/)){\r\n                return null;\r\n            }\r\n        } \r\n        return {Correo: false}\r\n    }\r\n    \r\n    static fullName(control: AbstractControl){\r\n        if(control.value != null){\r\n            const value: string = control.value;\r\n            if(value.match(/^(?=.{10,128}$)([A-ZÁÉÍÓÚ][a-zñáéíóú]{2,} )+([A-ZÁÉÍÓÚ][a-zñáéíóú]{2,})$/)){\r\n                return null;\r\n            }\r\n        } \r\n        return {Correo: false}\r\n    }\r\n    \r\n    static phoneNumber(control: AbstractControl){\r\n        if(control.value != null){\r\n            const value: string = String(control.value);\r\n            if(value.match(/^[0-9]{10}$/)){\r\n                return null;\r\n            }\r\n        } \r\n        return {Correo: false}\r\n    }\r\n    \r\n    static email(control: AbstractControl){\r\n        if(control.value != null){\r\n            const value: string = control.value;\r\n            if(value.match(/^[^@]+@[^@]+\\.[a-zA-Z]{2,}$/)){\r\n                return null;\r\n            }\r\n        } \r\n        return {Correo: false}\r\n    }\r\n    \r\n    static require(control: AbstractControl){\r\n        if(control.value != null){\r\n            const value: string = String(control.value);\r\n            if(value.match(/^.{1,}$/)){\r\n                return null;\r\n            }\r\n        } \r\n        return {Correo: false}\r\n    }\r\n}\r\n"],"names":["Injectable","HttpClient","environment","BalanceService","httpClient","target","data","post","api","JSON","stringify","input","toPromise","phone_number","fetch","providedIn","Storage","StorageService","storage","_ready","Promise","resolve","__awaiter","create","_storage","pn","set","remove","get","Validators","control","value","match","Correo","String"],"sourceRoot":"webpack:///"}